# -*- coding: utf-8 -*-
"""
-------------------------------------------------
Задача C4-59. 
Решение на языке Python 3.
 Автор: Константин Поляков, 2015
E-mail: kpolyakov@mail.ru
   Web: kpolyakov.spb.ru
-------------------------------------------------
Для заданной последовательности неотрицательных целых 
чисел необходимо найти минимальную сумму двух её 
элементов, номера которых различаются не менее 
чем на 4. Значение каждого элемента последовательности 
не превышает 1000. Количество элементов последовательности 
не превышает 10000.
Входные данные представлены следующим образом. В первой 
строке задаётся число N – общее количество элементов 
последовательности. Гарантируется, что N > 8. В каждой 
из следующих N строк задаётся одно неотрицательное 
целое число – очередной элемент последовательности. 
Пример входных данных:
7
10
45
55
245
35
25
10
Программа должна вывести одно число – 
описанную в условии сумму.
Пример выходных данных для приведённого выше 
примера входных данных:
20
"""
import sys
save_stdin = sys.stdin
sys.stdin = open("in/59.in")

N = int(input())
K = 4
Buf = [0]*K
minPrev = 1001
minRes = 2001
for i in range(N):
  if i >= K:
    minPrev = min(minPrev, Buf[i % K])
  Buf[i % K] = int(input())
  minRes = min(minRes, minPrev+Buf[i % K])

print(minRes)

sys.stdin = save_stdin